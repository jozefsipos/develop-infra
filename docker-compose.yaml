version: '3.6'
services:
  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5435:5432
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
#      - ./postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: "psql postgres -d postgres -c 'select 1'"
  redpanda:
    image: vectorized/redpanda:v23.2.9
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 29092:29092
    depends_on:
      postgres:
        condition: service_healthy
  console:
    image: docker.redpanda.com/vectorized/console:v2.3.3
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        connect:
          enabled: true
          clusters:
            - name: datagen
              url: http://connect:8083
    ports:
      - "8880:8080"
    depends_on:
      - redpanda
  connect:
    container_name: kafka-connect
    image: kafka-connect:latest
    build:
      context: ./kafka
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8083:8083
    volumes:
      - "./kafka/kafka-plugins:/kafka-plugins"
      - "./kafka/connectors:/kafka/config/connectors"
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"         # Agent receiving traces
      - "6831:6831/udp"         # Agent receiving traces in compact thrift protocol
      - "6832:6832/udp"         # Agent receiving traces in binary thrift protocol
      - "5778:5778"             # Agent exposing metrics
      - "16686:16686"           # Jaeger UI
      - "14268:14268"           # Collector HTTP endpoint
      - "14250:14250"           # gRPC collector
      - "9411:9411"             # Zipkin compatible endpoint
      - "4317:4317"
      - "4318:4318"
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
#      - COLLECTOR_OTLP_ENABLED=true
